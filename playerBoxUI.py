# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'PlayerBoxUI.ui'
#
# Created by: PyQt5 UI code generator 5.9.2
#
# WARNING! All changes made in this file will be lost!

from PyQt5 import QtCore, QtGui, QtWidgets

class Ui_MainWindow(object):
    def setupUi(self, MainWindow):
        MainWindow.setObjectName("MainWindow")
        MainWindow.resize(1538, 671)
        self.centralwidget = QtWidgets.QWidget(MainWindow)
        self.centralwidget.setObjectName("centralwidget")
        self.gridLayout = QtWidgets.QGridLayout(self.centralwidget)
        self.gridLayout.setObjectName("gridLayout")
        self.verticalLayout_2 = QtWidgets.QVBoxLayout()
        self.verticalLayout_2.setObjectName("verticalLayout_2")
        self.horizontalLayout_2 = QtWidgets.QHBoxLayout()
        self.horizontalLayout_2.setObjectName("horizontalLayout_2")
        self.verticalLayout = QtWidgets.QVBoxLayout()
        self.verticalLayout.setObjectName("verticalLayout")
        self.label_frameBox = QtWidgets.QLabel(self.centralwidget)
        self.label_frameBox.setMinimumSize(QtCore.QSize(1021, 205))
        self.label_frameBox.setSizeIncrement(QtCore.QSize(100, 60))
        self.label_frameBox.setBaseSize(QtCore.QSize(1021, 205))
        self.label_frameBox.setAutoFillBackground(False)
        self.label_frameBox.setFrameShape(QtWidgets.QFrame.Box)
        self.label_frameBox.setFrameShadow(QtWidgets.QFrame.Plain)
        self.label_frameBox.setText("")
        self.label_frameBox.setScaledContents(False)
        self.label_frameBox.setObjectName("label_frameBox")
        self.verticalLayout.addWidget(self.label_frameBox)
        self.label2 = QtWidgets.QLabel(self.centralwidget)
        self.label2.setMinimumSize(QtCore.QSize(1021, 205))
        self.label2.setSizeIncrement(QtCore.QSize(100, 60))
        self.label2.setBaseSize(QtCore.QSize(1021, 205))
        self.label2.setAutoFillBackground(False)
        self.label2.setFrameShape(QtWidgets.QFrame.Box)
        self.label2.setFrameShadow(QtWidgets.QFrame.Plain)
        self.label2.setText("")
        self.label2.setScaledContents(False)
        self.label2.setObjectName("label2")
        self.verticalLayout.addWidget(self.label2)
        self.horizontalLayout_2.addLayout(self.verticalLayout)
        self.tabWidget = QtWidgets.QTabWidget(self.centralwidget)
        self.tabWidget.setMaximumSize(QtCore.QSize(605, 16777215))
        self.tabWidget.setObjectName("tabWidget")
        self.tab_1 = QtWidgets.QWidget()
        self.tab_1.setObjectName("tab_1")
        self.tableWidget_micro = QtWidgets.QTableWidget(self.tab_1)
        self.tableWidget_micro.setGeometry(QtCore.QRect(0, 0, 481, 471))
        self.tableWidget_micro.setMinimumSize(QtCore.QSize(431, 0))
        self.tableWidget_micro.setObjectName("tableWidget_micro")
        self.tableWidget_micro.setColumnCount(3)
        self.tableWidget_micro.setRowCount(10)
        item = QtWidgets.QTableWidgetItem()
        self.tableWidget_micro.setVerticalHeaderItem(0, item)
        item = QtWidgets.QTableWidgetItem()
        self.tableWidget_micro.setVerticalHeaderItem(1, item)
        item = QtWidgets.QTableWidgetItem()
        self.tableWidget_micro.setVerticalHeaderItem(2, item)
        item = QtWidgets.QTableWidgetItem()
        self.tableWidget_micro.setVerticalHeaderItem(3, item)
        item = QtWidgets.QTableWidgetItem()
        self.tableWidget_micro.setVerticalHeaderItem(4, item)
        item = QtWidgets.QTableWidgetItem()
        self.tableWidget_micro.setVerticalHeaderItem(5, item)
        item = QtWidgets.QTableWidgetItem()
        self.tableWidget_micro.setVerticalHeaderItem(6, item)
        item = QtWidgets.QTableWidgetItem()
        self.tableWidget_micro.setVerticalHeaderItem(7, item)
        item = QtWidgets.QTableWidgetItem()
        self.tableWidget_micro.setVerticalHeaderItem(8, item)
        item = QtWidgets.QTableWidgetItem()
        self.tableWidget_micro.setVerticalHeaderItem(9, item)
        item = QtWidgets.QTableWidgetItem()
        self.tableWidget_micro.setHorizontalHeaderItem(0, item)
        item = QtWidgets.QTableWidgetItem()
        self.tableWidget_micro.setHorizontalHeaderItem(1, item)
        item = QtWidgets.QTableWidgetItem()
        self.tableWidget_micro.setHorizontalHeaderItem(2, item)
        self.tabWidget.addTab(self.tab_1, "")
        self.tab_2 = QtWidgets.QWidget()
        self.tab_2.setObjectName("tab_2")
        self.tableWidget_macro = QtWidgets.QTableWidget(self.tab_2)
        self.tableWidget_macro.setGeometry(QtCore.QRect(0, 0, 481, 471))
        self.tableWidget_macro.setMinimumSize(QtCore.QSize(431, 0))
        self.tableWidget_macro.setObjectName("tableWidget_macro")
        self.tableWidget_macro.setColumnCount(3)
        self.tableWidget_macro.setRowCount(8)
        item = QtWidgets.QTableWidgetItem()
        self.tableWidget_macro.setVerticalHeaderItem(0, item)
        item = QtWidgets.QTableWidgetItem()
        self.tableWidget_macro.setVerticalHeaderItem(1, item)
        item = QtWidgets.QTableWidgetItem()
        self.tableWidget_macro.setVerticalHeaderItem(2, item)
        item = QtWidgets.QTableWidgetItem()
        self.tableWidget_macro.setVerticalHeaderItem(3, item)
        item = QtWidgets.QTableWidgetItem()
        self.tableWidget_macro.setVerticalHeaderItem(4, item)
        item = QtWidgets.QTableWidgetItem()
        self.tableWidget_macro.setVerticalHeaderItem(5, item)
        item = QtWidgets.QTableWidgetItem()
        self.tableWidget_macro.setVerticalHeaderItem(6, item)
        item = QtWidgets.QTableWidgetItem()
        self.tableWidget_macro.setVerticalHeaderItem(7, item)
        item = QtWidgets.QTableWidgetItem()
        self.tableWidget_macro.setHorizontalHeaderItem(0, item)
        item = QtWidgets.QTableWidgetItem()
        self.tableWidget_macro.setHorizontalHeaderItem(1, item)
        item = QtWidgets.QTableWidgetItem()
        self.tableWidget_macro.setHorizontalHeaderItem(2, item)
        item = QtWidgets.QTableWidgetItem()
        item.setTextAlignment(QtCore.Qt.AlignLeading|QtCore.Qt.AlignVCenter)
        self.tableWidget_macro.setItem(0, 0, item)
        item = QtWidgets.QTableWidgetItem()
        item.setTextAlignment(QtCore.Qt.AlignCenter)
        self.tableWidget_macro.setItem(0, 1, item)
        item = QtWidgets.QTableWidgetItem()
        item.setTextAlignment(QtCore.Qt.AlignLeading|QtCore.Qt.AlignVCenter)
        self.tableWidget_macro.setItem(1, 0, item)
        item = QtWidgets.QTableWidgetItem()
        item.setTextAlignment(QtCore.Qt.AlignCenter)
        self.tableWidget_macro.setItem(1, 1, item)
        item = QtWidgets.QTableWidgetItem()
        item.setTextAlignment(QtCore.Qt.AlignLeading|QtCore.Qt.AlignVCenter)
        self.tableWidget_macro.setItem(2, 0, item)
        item = QtWidgets.QTableWidgetItem()
        item.setTextAlignment(QtCore.Qt.AlignCenter)
        self.tableWidget_macro.setItem(2, 1, item)
        item = QtWidgets.QTableWidgetItem()
        item.setTextAlignment(QtCore.Qt.AlignLeading|QtCore.Qt.AlignVCenter)
        self.tableWidget_macro.setItem(3, 0, item)
        item = QtWidgets.QTableWidgetItem()
        item.setTextAlignment(QtCore.Qt.AlignCenter)
        self.tableWidget_macro.setItem(3, 1, item)
        item = QtWidgets.QTableWidgetItem()
        item.setTextAlignment(QtCore.Qt.AlignLeading|QtCore.Qt.AlignVCenter)
        self.tableWidget_macro.setItem(4, 0, item)
        item = QtWidgets.QTableWidgetItem()
        item.setTextAlignment(QtCore.Qt.AlignCenter)
        self.tableWidget_macro.setItem(4, 1, item)
        item = QtWidgets.QTableWidgetItem()
        item.setTextAlignment(QtCore.Qt.AlignLeading|QtCore.Qt.AlignVCenter)
        self.tableWidget_macro.setItem(5, 0, item)
        item = QtWidgets.QTableWidgetItem()
        item.setTextAlignment(QtCore.Qt.AlignCenter)
        self.tableWidget_macro.setItem(5, 1, item)
        item = QtWidgets.QTableWidgetItem()
        item.setTextAlignment(QtCore.Qt.AlignLeading|QtCore.Qt.AlignVCenter)
        self.tableWidget_macro.setItem(6, 0, item)
        item = QtWidgets.QTableWidgetItem()
        item.setTextAlignment(QtCore.Qt.AlignCenter)
        self.tableWidget_macro.setItem(6, 1, item)
        self.tabWidget.addTab(self.tab_2, "")
        self.horizontalLayout_2.addWidget(self.tabWidget)
        self.verticalLayout_2.addLayout(self.horizontalLayout_2)
        self.horizontalLayout = QtWidgets.QHBoxLayout()
        self.horizontalLayout.setSizeConstraint(QtWidgets.QLayout.SetMaximumSize)
        self.horizontalLayout.setSpacing(9)
        self.horizontalLayout.setObjectName("horizontalLayout")
        self.pushButton_play_pause = QtWidgets.QPushButton(self.centralwidget)
        self.pushButton_play_pause.setMinimumSize(QtCore.QSize(25, 25))
        self.pushButton_play_pause.setMaximumSize(QtCore.QSize(25, 25))
        self.pushButton_play_pause.setFocusPolicy(QtCore.Qt.NoFocus)
        self.pushButton_play_pause.setText("")
        icon = QtGui.QIcon()
        icon.addPixmap(QtGui.QPixmap(":/button/pause.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        icon.addPixmap(QtGui.QPixmap(":/button/play.png"), QtGui.QIcon.Normal, QtGui.QIcon.On)
        icon.addPixmap(QtGui.QPixmap(":/menu/pause.png"), QtGui.QIcon.Selected, QtGui.QIcon.Off)
        icon.addPixmap(QtGui.QPixmap(":/menu/play.png"), QtGui.QIcon.Selected, QtGui.QIcon.On)
        self.pushButton_play_pause.setIcon(icon)
        self.pushButton_play_pause.setCheckable(True)
        self.pushButton_play_pause.setChecked(True)
        self.pushButton_play_pause.setDefault(False)
        self.pushButton_play_pause.setObjectName("pushButton_play_pause")
        self.horizontalLayout.addWidget(self.pushButton_play_pause)
        self.horizontalSlider = QtWidgets.QSlider(self.centralwidget)
        self.horizontalSlider.setMaximumSize(QtCore.QSize(16777215, 10))
        self.horizontalSlider.setOrientation(QtCore.Qt.Horizontal)
        self.horizontalSlider.setObjectName("horizontalSlider")
        self.horizontalLayout.addWidget(self.horizontalSlider)
        self.label_cur_num = QtWidgets.QLabel(self.centralwidget)
        self.label_cur_num.setMaximumSize(QtCore.QSize(16777215, 25))
        self.label_cur_num.setObjectName("label_cur_num")
        self.horizontalLayout.addWidget(self.label_cur_num)
        self.verticalLayout_2.addLayout(self.horizontalLayout)
        self.gridLayout.addLayout(self.verticalLayout_2, 0, 0, 1, 1)
        MainWindow.setCentralWidget(self.centralwidget)
        self.menubar = QtWidgets.QMenuBar(MainWindow)
        self.menubar.setGeometry(QtCore.QRect(0, 0, 1538, 30))
        self.menubar.setObjectName("menubar")
        self.menu_file = QtWidgets.QMenu(self.menubar)
        self.menu_file.setObjectName("menu_file")
        self.menu_edit = QtWidgets.QMenu(self.menubar)
        self.menu_edit.setObjectName("menu_edit")
        self.menu_help = QtWidgets.QMenu(self.menubar)
        self.menu_help.setObjectName("menu_help")
        self.menu_filter = QtWidgets.QMenu(self.menubar)
        self.menu_filter.setObjectName("menu_filter")
        self.menu = QtWidgets.QMenu(self.menubar)
        self.menu.setObjectName("menu")
        MainWindow.setMenuBar(self.menubar)
        self.toolBar = QtWidgets.QToolBar(MainWindow)
        self.toolBar.setMouseTracking(True)
        self.toolBar.setObjectName("toolBar")
        MainWindow.addToolBar(QtCore.Qt.TopToolBarArea, self.toolBar)
        self.statusBar = QtWidgets.QStatusBar(MainWindow)
        self.statusBar.setObjectName("statusBar")
        MainWindow.setStatusBar(self.statusBar)
        self.action_open = QtWidgets.QAction(MainWindow)
        icon1 = QtGui.QIcon()
        icon1.addPixmap(QtGui.QPixmap(":/action/open.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.action_open.setIcon(icon1)
        self.action_open.setObjectName("action_open")
        self.action_exit = QtWidgets.QAction(MainWindow)
        icon2 = QtGui.QIcon()
        icon2.addPixmap(QtGui.QPixmap(":/action/exit.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.action_exit.setIcon(icon2)
        self.action_exit.setObjectName("action_exit")
        self.action_rotate = QtWidgets.QAction(MainWindow)
        self.action_rotate.setCheckable(False)
        self.action_rotate.setEnabled(False)
        icon3 = QtGui.QIcon()
        icon3.addPixmap(QtGui.QPixmap(":/action/rotate.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.action_rotate.setIcon(icon3)
        self.action_rotate.setObjectName("action_rotate")
        self.action_viewCap = QtWidgets.QAction(MainWindow)
        self.action_viewCap.setCheckable(False)
        self.action_viewCap.setEnabled(False)
        icon4 = QtGui.QIcon()
        icon4.addPixmap(QtGui.QPixmap(":/action/clip.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.action_viewCap.setIcon(icon4)
        self.action_viewCap.setObjectName("action_viewCap")
        self.action_drawbox = QtWidgets.QAction(MainWindow)
        self.action_drawbox.setCheckable(False)
        self.action_drawbox.setEnabled(False)
        icon5 = QtGui.QIcon()
        icon5.addPixmap(QtGui.QPixmap(":/action/select.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.action_drawbox.setIcon(icon5)
        self.action_drawbox.setObjectName("action_drawbox")
        self.action_save = QtWidgets.QAction(MainWindow)
        icon6 = QtGui.QIcon()
        icon6.addPixmap(QtGui.QPixmap(":/action/save.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.action_save.setIcon(icon6)
        self.action_save.setObjectName("action_save")
        self.action_ColorThreshholder = QtWidgets.QAction(MainWindow)
        self.action_ColorThreshholder.setCheckable(True)
        self.action_ColorThreshholder.setChecked(True)
        self.action_ColorThreshholder.setObjectName("action_ColorThreshholder")
        self.action_ContourFilter = QtWidgets.QAction(MainWindow)
        self.action_ContourFilter.setCheckable(True)
        self.action_ContourFilter.setChecked(True)
        self.action_ContourFilter.setObjectName("action_ContourFilter")
        self.action_MorphologyEx = QtWidgets.QAction(MainWindow)
        self.action_MorphologyEx.setObjectName("action_MorphologyEx")
        self.action_Blur = QtWidgets.QAction(MainWindow)
        self.action_Blur.setObjectName("action_Blur")
        self.action_readConfig = QtWidgets.QAction(MainWindow)
        icon7 = QtGui.QIcon()
        icon7.addPixmap(QtGui.QPixmap(":/action/readconfig.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.action_readConfig.setIcon(icon7)
        self.action_readConfig.setObjectName("action_readConfig")
        self.action_saveConfig = QtWidgets.QAction(MainWindow)
        icon8 = QtGui.QIcon()
        icon8.addPixmap(QtGui.QPixmap(":/action/saveconfig.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.action_saveConfig.setIcon(icon8)
        self.action_saveConfig.setObjectName("action_saveConfig")
        self.action_getbkg = QtWidgets.QAction(MainWindow)
        self.action_getbkg.setObjectName("action_getbkg")
        self.action_frameDiff = QtWidgets.QAction(MainWindow)
        self.action_frameDiff.setCheckable(True)
        self.action_frameDiff.setObjectName("action_frameDiff")
        self.action_MOG2 = QtWidgets.QAction(MainWindow)
        self.action_MOG2.setCheckable(True)
        self.action_MOG2.setObjectName("action_MOG2")
        self.action_autoDetect = QtWidgets.QAction(MainWindow)
        self.action_autoDetect.setCheckable(True)
        self.action_autoDetect.setChecked(True)
        self.action_autoDetect.setObjectName("action_autoDetect")
        self.action_calib = QtWidgets.QAction(MainWindow)
        self.action_calib.setEnabled(False)
        icon9 = QtGui.QIcon()
        icon9.addPixmap(QtGui.QPixmap(":/action/ruler.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.action_calib.setIcon(icon9)
        self.action_calib.setObjectName("action_calib")
        self.action_trace = QtWidgets.QAction(MainWindow)
        self.action_trace.setObjectName("action_trace")
        self.action_bkgDiff = QtWidgets.QAction(MainWindow)
        self.action_bkgDiff.setCheckable(True)
        self.action_bkgDiff.setObjectName("action_bkgDiff")
        self.action_help = QtWidgets.QAction(MainWindow)
        self.action_help.setObjectName("action_help")
        self.action_selectROI = QtWidgets.QAction(MainWindow)
        self.action_selectROI.setEnabled(False)
        icon10 = QtGui.QIcon()
        icon10.addPixmap(QtGui.QPixmap(":/action/roi.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.action_selectROI.setIcon(icon10)
        self.action_selectROI.setObjectName("action_selectROI")
        self.action_lanes = QtWidgets.QAction(MainWindow)
        self.action_lanes.setEnabled(False)
        icon11 = QtGui.QIcon()
        icon11.addPixmap(QtGui.QPixmap(":/action/lane.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.action_lanes.setIcon(icon11)
        self.action_lanes.setObjectName("action_lanes")
        self.action_morph = QtWidgets.QAction(MainWindow)
        self.action_morph.setCheckable(True)
        self.action_morph.setObjectName("action_morph")
        self.menu_file.addAction(self.action_open)
        self.menu_file.addAction(self.action_save)
        self.menu_file.addAction(self.action_exit)
        self.menu_file.addSeparator()
        self.menu_file.addAction(self.action_readConfig)
        self.menu_file.addAction(self.action_saveConfig)
        self.menu_edit.addAction(self.action_rotate)
        self.menu_edit.addAction(self.action_viewCap)
        self.menu_edit.addAction(self.action_selectROI)
        self.menu_edit.addAction(self.action_calib)
        self.menu_edit.addAction(self.action_lanes)
        self.menu_edit.addSeparator()
        self.menu_edit.addAction(self.action_getbkg)
        self.menu_help.addAction(self.action_help)
        self.menu_filter.addAction(self.action_morph)
        self.menu_filter.addAction(self.action_ContourFilter)
        self.menu_filter.addSeparator()
        self.menu_filter.addAction(self.action_trace)
        self.menu.addAction(self.action_drawbox)
        self.menu.addAction(self.action_autoDetect)
        self.menu.addAction(self.action_ColorThreshholder)
        self.menu.addAction(self.action_frameDiff)
        self.menu.addAction(self.action_MOG2)
        self.menu.addAction(self.action_bkgDiff)
        self.menubar.addAction(self.menu_file.menuAction())
        self.menubar.addAction(self.menu_edit.menuAction())
        self.menubar.addAction(self.menu.menuAction())
        self.menubar.addAction(self.menu_filter.menuAction())
        self.menubar.addAction(self.menu_help.menuAction())
        self.toolBar.addAction(self.action_open)
        self.toolBar.addAction(self.action_save)
        self.toolBar.addAction(self.action_exit)
        self.toolBar.addSeparator()
        self.toolBar.addAction(self.action_rotate)
        self.toolBar.addAction(self.action_viewCap)
        self.toolBar.addAction(self.action_selectROI)
        self.toolBar.addAction(self.action_calib)
        self.toolBar.addAction(self.action_lanes)
        self.toolBar.addAction(self.action_drawbox)
        self.toolBar.addSeparator()

        self.retranslateUi(MainWindow)
        self.tabWidget.setCurrentIndex(1)
        self.action_exit.triggered.connect(MainWindow.close)
        self.horizontalSlider.valueChanged['int'].connect(self.label_cur_num.setNum)
        QtCore.QMetaObject.connectSlotsByName(MainWindow)

    def retranslateUi(self, MainWindow):
        _translate = QtCore.QCoreApplication.translate
        MainWindow.setWindowTitle(_translate("MainWindow", "MainWindow"))
        item = self.tableWidget_micro.verticalHeaderItem(0)
        item.setText(_translate("MainWindow", "1"))
        item = self.tableWidget_micro.verticalHeaderItem(1)
        item.setText(_translate("MainWindow", "2"))
        item = self.tableWidget_micro.verticalHeaderItem(2)
        item.setText(_translate("MainWindow", "3"))
        item = self.tableWidget_micro.verticalHeaderItem(3)
        item.setText(_translate("MainWindow", "4"))
        item = self.tableWidget_micro.verticalHeaderItem(4)
        item.setText(_translate("MainWindow", "5"))
        item = self.tableWidget_micro.verticalHeaderItem(5)
        item.setText(_translate("MainWindow", "6"))
        item = self.tableWidget_micro.verticalHeaderItem(6)
        item.setText(_translate("MainWindow", "7"))
        item = self.tableWidget_micro.verticalHeaderItem(7)
        item.setText(_translate("MainWindow", "8"))
        item = self.tableWidget_micro.verticalHeaderItem(8)
        item.setText(_translate("MainWindow", "9"))
        item = self.tableWidget_micro.verticalHeaderItem(9)
        item.setText(_translate("MainWindow", "10"))
        item = self.tableWidget_micro.horizontalHeaderItem(0)
        item.setText(_translate("MainWindow", "车辆编号"))
        item = self.tableWidget_micro.horizontalHeaderItem(1)
        item.setText(_translate("MainWindow", "位置"))
        item = self.tableWidget_micro.horizontalHeaderItem(2)
        item.setText(_translate("MainWindow", "速度"))
        self.tabWidget.setTabText(self.tabWidget.indexOf(self.tab_1), _translate("MainWindow", "车辆信息"))
        item = self.tableWidget_macro.verticalHeaderItem(0)
        item.setText(_translate("MainWindow", "1"))
        item = self.tableWidget_macro.verticalHeaderItem(1)
        item.setText(_translate("MainWindow", "2"))
        item = self.tableWidget_macro.verticalHeaderItem(2)
        item.setText(_translate("MainWindow", "3"))
        item = self.tableWidget_macro.verticalHeaderItem(3)
        item.setText(_translate("MainWindow", "4"))
        item = self.tableWidget_macro.verticalHeaderItem(4)
        item.setText(_translate("MainWindow", "5"))
        item = self.tableWidget_macro.verticalHeaderItem(5)
        item.setText(_translate("MainWindow", "6"))
        item = self.tableWidget_macro.verticalHeaderItem(6)
        item.setText(_translate("MainWindow", "7"))
        item = self.tableWidget_macro.horizontalHeaderItem(0)
        item.setText(_translate("MainWindow", "项目"))
        item = self.tableWidget_macro.horizontalHeaderItem(1)
        item.setText(_translate("MainWindow", "数值"))
        __sortingEnabled = self.tableWidget_macro.isSortingEnabled()
        self.tableWidget_macro.setSortingEnabled(False)
        item = self.tableWidget_macro.item(0, 0)
        item.setText(_translate("MainWindow", "  车辆计数"))
        item = self.tableWidget_macro.item(1, 0)
        item.setText(_translate("MainWindow", "  交通量"))
        item = self.tableWidget_macro.item(2, 0)
        item.setText(_translate("MainWindow", "  空间平均速度"))
        item = self.tableWidget_macro.item(3, 0)
        item.setText(_translate("MainWindow", "  时间平均速度"))
        item = self.tableWidget_macro.item(4, 0)
        item.setText(_translate("MainWindow", "  车流密度"))
        item = self.tableWidget_macro.item(5, 0)
        item.setText(_translate("MainWindow", "  车头间距"))
        item = self.tableWidget_macro.item(6, 0)
        item.setText(_translate("MainWindow", "  车头时距"))
        self.tableWidget_macro.setSortingEnabled(__sortingEnabled)
        self.tabWidget.setTabText(self.tabWidget.indexOf(self.tab_2), _translate("MainWindow", "交通信息"))
        self.pushButton_play_pause.setShortcut(_translate("MainWindow", "Space"))
        self.label_cur_num.setText(_translate("MainWindow", "frame num"))
        self.menu_file.setTitle(_translate("MainWindow", "文件"))
        self.menu_edit.setTitle(_translate("MainWindow", "编辑"))
        self.menu_help.setTitle(_translate("MainWindow", "帮助"))
        self.menu_filter.setTitle(_translate("MainWindow", "调整"))
        self.menu.setTitle(_translate("MainWindow", "目标检测"))
        self.toolBar.setWindowTitle(_translate("MainWindow", "toolBar"))
        self.action_open.setText(_translate("MainWindow", "打开视频"))
        self.action_open.setStatusTip(_translate("MainWindow", "选择需要打开的视频文件"))
        self.action_exit.setText(_translate("MainWindow", "退出"))
        self.action_exit.setStatusTip(_translate("MainWindow", "退出系统"))
        self.action_exit.setWhatsThis(_translate("MainWindow", "退出系统"))
        self.action_rotate.setText(_translate("MainWindow", "调整画面角度"))
        self.action_rotate.setStatusTip(_translate("MainWindow", "绘制一条基准线，自动将基准线调整为水平位置"))
        self.action_viewCap.setText(_translate("MainWindow", "截选观察区"))
        self.action_viewCap.setStatusTip(_translate("MainWindow", "选取视频图像的显示区域"))
        self.action_drawbox.setText(_translate("MainWindow", "手动框选目标"))
        self.action_drawbox.setStatusTip(_translate("MainWindow", "手动框选追踪目标"))
        self.action_save.setText(_translate("MainWindow", "保存路径"))
        self.action_save.setToolTip(_translate("MainWindow", "选择保存路径"))
        self.action_save.setStatusTip(_translate("MainWindow", "选择保存车辆信息的路径，若未选择，则默认不保存车辆数据"))
        self.action_save.setWhatsThis(_translate("MainWindow", "选择保存车辆信息的路径，若未选择，则默认不保存车辆数据"))
        self.action_save.setShortcut(_translate("MainWindow", "Ctrl+S"))
        self.action_ColorThreshholder.setText(_translate("MainWindow", "色彩分割"))
        self.action_ContourFilter.setText(_translate("MainWindow", "轮廓筛选"))
        self.action_ContourFilter.setStatusTip(_translate("MainWindow", "设置参数对自动检测到的车辆目标进行过滤"))
        self.action_MorphologyEx.setText(_translate("MainWindow", "形态学处理"))
        self.action_Blur.setText(_translate("MainWindow", "模糊处理"))
        self.action_readConfig.setText(_translate("MainWindow", "读取配置文件"))
        self.action_readConfig.setStatusTip(_translate("MainWindow", "读取电脑中的.ini配置文件"))
        self.action_saveConfig.setText(_translate("MainWindow", "保存配置文件"))
        self.action_saveConfig.setStatusTip(_translate("MainWindow", "选择一个路径用于将当前设置参数保存为.ini配置文件"))
        self.action_getbkg.setText(_translate("MainWindow", "背景提取"))
        self.action_frameDiff.setText(_translate("MainWindow", "帧间差分"))
        self.action_MOG2.setText(_translate("MainWindow", "MOG2"))
        self.action_autoDetect.setText(_translate("MainWindow", "自动检测模式"))
        self.action_autoDetect.setStatusTip(_translate("MainWindow", "开启该功能，则系统将使用指定方式自动检测显示区域中的车辆目标"))
        self.action_calib.setText(_translate("MainWindow", "比例标注"))
        self.action_calib.setStatusTip(_translate("MainWindow", "在图像中绘制直线，并为其标注实际长度"))
        self.action_trace.setText(_translate("MainWindow", "路径绘制"))
        self.action_bkgDiff.setText(_translate("MainWindow", "背景差分"))
        self.action_help.setText(_translate("MainWindow", "使用说明"))
        self.action_selectROI.setText(_translate("MainWindow", "选取检测区"))
        self.action_lanes.setText(_translate("MainWindow", "车道标注"))
        self.action_morph.setText(_translate("MainWindow", "形态学处理"))

import ui_icon_rc
